% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dem_parity.R
\name{dem_parity}
\alias{dem_parity}
\title{Demographic parity}
\usage{
dem_parity(data, group, probs = NULL, preds = NULL,
  preds_levels = c("no", "yes"), cutoff = 0.5, base = NULL)
}
\arguments{
\item{data}{The dataframe that contains the necessary columns.}

\item{group}{Sensitive group to examine.}

\item{probs}{The column name of the predicted probabilities (numeric between 0 - 1). If not defined, argument preds need to be defined.}

\item{preds}{The column name of the predicted outcome (categorical outcome). If not defined, argument probs need to be defined.}

\item{preds_levels}{The desired levels of the predicted outcome (categorical outcome). As these levels are commonly defined as yes/no, the function uses this as default.}

\item{cutoff}{Cutoff to generate predicted outcomes from predicted probabilities. Default set to 0.5.}

\item{base}{Base level for sensitive group comparison}
}
\value{
Demographic parity metrics for all groups. Lower values compared to the reference group mean lower proportion of positively predicted observations in the selected subgroups.
}
\description{
This function computes the Demographic parity metric
}
\details{
This function computes the Demographic parity metric (also known as Equal Acceptance Rate or Independence) as described by Calders and Verwer 2010. Demographic parity is calculated
based on the comparison of the proportion of all positively classified individuals in all subgroups of the data. In the returned
named vector, the reference group will be assigned 1, while all other groups will be assigned values
according to whether their proportion of positively predicted observations are lower or higher compared to the reference group. Lower
proportions will be reflected in numbers lower than 1 in the returned named vector, thus numbers
lower than 1 indicate negative disparity for the given subgroup.
}
\examples{
df <- fairness::compas
dem_parity(data = df, group = df$race, base = "Caucasian")

}
